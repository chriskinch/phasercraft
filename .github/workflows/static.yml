# Build and deploy workflow for static content to GitHub Pages
name: Build and Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

jobs:
  # Build job that runs on both PRs and main branch
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm ci
      - name: Build server
        run: |
          cd server
          yarn install --frozen-lockfile
      - name: Build service/armory
        run: |
          cd services/armory
          yarn install --frozen-lockfile
      - name: Build main application
        run: npm run build
        env:
          DEPLOY: production
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: './dist'
          retention-days: 1

  # Deploy job that only runs on main branch pushes
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: './dist'
      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  dependabot:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          skip-verification: true
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}